}
# for (i in 1:dim(result$U.chain)[1]){
#   plot(result$V.chain[i,], type="l", ylab = paste0("U", i))
# }
#
# for (i in 1:dim(result$Lambda2.chain)[1]){
#   plot(result$Delta.chain[i,], type="l", ylab = paste0("Lambda2", i))
# }
#
# plot(result$Tau2.chain, type = 'l' , ylab = 'tau2')
dev.off()
}
result <- HS_results
draw_plots_HS(result)
str(HS_results)
draw_plots_HS <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$Beta.chain)[1]){
plot(result$Beta.chain[i,], type="l", ylab = paste0("Beta", i))
}
for (i in 1:dim(result$U.chain)[1]){
plot(result$V.chain[i,], type="l", ylab = paste0("U", i))
}
# for (i in 1:dim(result$Lambda2.chain)[1]){
#   plot(result$Delta.chain[i,], type="l", ylab = paste0("Lambda2", i))
# }
#
# plot(result$Tau2.chain, type = 'l' , ylab = 'tau2')
dev.off()
}
result <- HS_results
draw_plots_HS(result)
str(HS_results)
o
draw_plots_HS <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$Beta.chain)[1]){
plot(result$Beta.chain[i,], type="l", ylab = paste0("Beta", i))
}
for (i in 1:dim(result$U.chain)[1]){
plot(result$U.chain[i,], type="l", ylab = paste0("U", i))
}
for (i in 1:dim(result$Lambda2.chain)[1]){
plot(result$Delta.chain[i,], type="l", ylab = paste0("Lambda2", i))
}
plot(result$Tau2.chain, type = 'l' , ylab = 'tau2')
dev.off()
}
result <- HS_results
draw_plots_HS(result)
str(HS_results)
draw_plots_HS <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$Beta.chain)[1]){
plot(result$Beta.chain[i,], type="l", ylab = paste0("Beta", i))
}
for (i in 1:dim(result$U.chain)[1]){
plot(result$U.chain[i,], type="l", ylab = paste0("U", i))
}
for (i in 1:dim(result$Lambda2.chain)[1]){
plot(result$Lambda2.chain[i,], type="l", ylab = paste0("Lambda2", i))
}
plot(result$Tau2.chain, type = 'l' , ylab = 'tau2')
dev.off()
}
result <- HS_results
draw_plots_HS(result)
str(HS_results)
draw_plots_SB <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$Beta.chain)[1]){
plot(result$Beta.chain[i,], type="l", ylab = paste0("Beta", i))
}
for (i in 1:dim(result$U.chain)[1]){
plot(result$U.chain[i,], type="l", ylab = paste0("U", i))
}
for (i in 1:dim(result$Lambda2.chain)[1]){
plot(result$Lambda2.chain[i,], type="l", ylab = paste0("Lambda2", i))
}
plot(result$Tau2.chain, type = 'l' , ylab = 'tau2')
dev.off()
}
result <- SB_results
draw_plots_SB(result)
str(HS_results)
draw_plots_HS <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$Beta.chain)[1]){
plot(result$Beta.chain[i,], type="l", ylab = paste0("Beta", i))
}
for (i in 1:dim(result$U.chain)[1]){
plot(result$U.chain[i,], type="l", ylab = paste0("U", i))
}
for (i in 1:dim(result$Lambda2.chain)[1]){
plot(result$Lambda2.chain[i,], type="l", ylab = paste0("Lambda2", i))
}
plot(result$Tau2.chain, type = 'l' , ylab = 'tau2')
dev.off()
}
result <- HS_results
result <- SB_results
result <- NEG_results
result <- LA_results
result <- NG_results
draw_plots_HS(result)
result <- GLlasso_results
draw_plots_GLlasso(result)
draw_plots_GLlasso <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
# only for GLlasso
plot(result$a, type="l", ylab = 'a')
plot(result$b, type="l", ylab = 'b')
plot(result$r, type="l", ylab = 'r')
dev.off()
}
result <- GLlasso_results
draw_plots_GLlasso(result)
draw_plots_BEN <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
dev.off()
}
result <- BEN_results
draw_plots_BEN(result)
draw_plots_BEN <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
dev.off()
}
result <- BEN_results
draw_plots_BEN(result)
draw_plots_GLlasso <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
# only for GLlasso
plot(result$a, type="l", ylab = 'a')
plot(result$b, type="l", ylab = 'b')
plot(result$r, type="l", ylab = 'r')
dev.off()
}
result <- GLlasso_results
draw_plots_GLlasso(result)
draw_plots_BEN <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
dev.off()
}
result <- BEN_results
draw_plots_BEN(result)
LA_U.est
BEN_U.est
which.max(abs(BEN_U.est))
which.max(abs(LA_U.est))
which.max(abs(NEG_U.est))
draw_plots_BEN <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
dev.off()
}
result <- BEN_results
draw_plots_BEN(result)
source('samplers/ben_sampler.R')
source('samplers/lasso_sampler.R')
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s =6, hyper.t = 6, tune=0.005, init_rho = 0.5, thin = 10, rho.select = 0.5)
draw_plots_BEN <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
dev.off()
}
result <- BEN_results
draw_plots_BEN(result)
# figure 6
pdf("analysis/plots/U_est.pdf",width=5, height=5)
plot(HS_U.est, pch=16, col="black", ylim=c(-2,6), xlab="States", ylab="")
points(LA_U.est, pch=17, col="red")
points(DM_U.est, pch=6, col="green")
points(FH_U.est, pch=8, col="blue")
points(BEN_U.est, pch=8, col="orange")
points(GLlasso_U.est, pch=8, col="pink")
abline(h=0, lty=2)
abline(v=22, lty=2)
text(22,4.6, "Massachusetts",pos=1)
legend("topright", legend=c("HS", "LA", "DM", "FH", 'BEN', 'GLlasso'), pch=c(16,17,6,8, 8,8), col=c("black", "red", "green","blue", 'orange','pink'))
dev.off()
BEN_U.est
which.max(abs(BEN_U.est))
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s =6, hyper.t = 6, tune=0.005, init_rho = 0.5, thin = 10)
BEN_U.est
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s =6, hyper.t = 6, tune=0.005, init_rho = 0.5, thin = 10, rho.select = 0.5)
BEN_U.est <- colMeans(BEN_results$v)
BEN_U.est
# figure 6
pdf("analysis/plots/U_est.pdf",width=5, height=5)
plot(HS_U.est, pch=16, col="black", ylim=c(-2,6), xlab="States", ylab="")
points(LA_U.est, pch=17, col="red")
points(DM_U.est, pch=6, col="green")
points(FH_U.est, pch=8, col="blue")
points(BEN_U.est, pch=8, col="orange")
points(GLlasso_U.est, pch=8, col="pink")
abline(h=0, lty=2)
abline(v=22, lty=2)
text(22,4.6, "Massachusetts",pos=1)
legend("topright", legend=c("HS", "LA", "DM", "FH", 'BEN', 'GLlasso'), pch=c(16,17,6,8, 8,8), col=c("black", "red", "green","blue", 'orange','pink'))
dev.off()
which.max(abs(BEN_U.est))
BEN_results$sigma2
mean(BEN_results$sigma2)
mean(HS_results$Tau2.chain)
mean(SB_results$Tau2.chain)
mean(NEG_results$Tau2.chain)
mean(LA_results$Tau2.chain)
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s = 2, hyper.t = 2, tune=0.005, init_rho = 0.5, thin = 10)
BEN_theta.est <- BEN_results$theta
BEN_theta.sd <- apply(X %*% t(BEN_results$beta) + t(BEN_results$v), 1, sd)
BEN_B.est <- NA
BEN_U.est <- colMeans(BEN_results$v)
save(m, X, Y, D, WLS_Beta.est, WLS_theta.est, HS_results, SB_results, NEG_results, LA_results, NG_results, DM_results, FH_results, BEN_results, GLlasso_results, file="data1_results.RData")
theta.true <- scan("analysis/data1_theta0.txt")
FH_dm <- dev_measure(FH_theta.est, theta.true)
DM_dm <- dev_measure(DM_theta.est, theta.true)
HS_dm <- dev_measure(HS_theta.est, theta.true)
SB_dm <- dev_measure(SB_theta.est, theta.true)
NEG_dm <- dev_measure(NEG_theta.est, theta.true)
LA_dm <- dev_measure(LA_theta.est, theta.true)
NG_dm <- dev_measure(NG_theta.est, theta.true)
BEN_dm <- dev_measure(BEN_theta.est, theta.true)
GLlasso_dm <- dev_measure(GLlasso_theta.est, theta.true)
# 비교군
WLS_dm <- dev_measure(WLS_theta.est, theta.true)
direct_dm <- dev_measure(Y, theta.true)
##### DIC #####
dic <- function(Y, Theta.chain, D)
{
n <- dim(Theta.chain)[2]
Theta.est <- apply(Theta.chain, 1, mean)
D.chain <- rep(0, n)
for (i in 1:n) D.chain[i] <- -2*sum(dnorm(Y, mean=Theta.chain[,i], sd=sqrt(D), log=TRUE))
D.thetabar <- -2*sum(dnorm(Y, mean=Theta.est, sd=sqrt(D), log=TRUE))
2*mean(D.chain) - D.thetabar
}
# D(\bar \theta) + 2*p_D; p_D = \bar D - D(\bar theta); D(\theta) = -2*log-likelihood
n.model <- 9+2
dic.all <- rep(0, n.model)
# FH
Theta.chain <- FH_results$Theta.chain
dic.all[1] <- dic(Y, Theta.chain, D)
# DM
Theta.chain <- X%*%DM_results$Beta.chain + DM_results$V.chain
dic.all[2] <- dic(Y, Theta.chain, D)
# HS
Theta.chain <- X%*%HS_results$Beta.chain + HS_results$U.chain
dic.all[3] <- dic(Y, Theta.chain, D)
# SB
Theta.chain <- X%*%SB_results$Beta.chain + SB_results$U.chain
dic.all[4] <- dic(Y, Theta.chain, D)
# NEG
Theta.chain <- X%*%NEG_results$Beta.chain + NEG_results$U.chain
dic.all[5] <- dic(Y, Theta.chain, D)
# LA
Theta.chain <- X%*%LA_results$Beta.chain + LA_results$U.chain
dic.all[6] <- dic(Y, Theta.chain, D)
# NG
Theta.chain <- X%*%NG_results$Beta.chain + NG_results$U.chain
dic.all[7] <- dic(Y, Theta.chain, D)
#BEN
Theta.chain <- X %*% t(BEN_results$beta) + t(BEN_results$v)
dic.all[8] <- dic(Y, Theta.chain, D)
#GLlasso
Theta.chain <- X %*% t(GLlasso_results$beta) + t(GLlasso_results$v)
dic.all[9] <- dic(Y, Theta.chain, D)
results <- cbind(FH_dm, DM_dm, HS_dm, SB_dm, NEG_dm, LA_dm, NG_dm, BEN_dm, GLlasso_dm, WLS_dm,  direct_dm)
results <- rbind(results, dic.all)
results
# figure 6
pdf("analysis/plots/U_est.pdf",width=5, height=5)
plot(HS_U.est, pch=16, col="black", ylim=c(-2,6), xlab="States", ylab="")
points(LA_U.est, pch=17, col="red")
points(DM_U.est, pch=6, col="green")
points(FH_U.est, pch=8, col="blue")
points(BEN_U.est, pch=8, col="orange")
points(GLlasso_U.est, pch=8, col="pink")
abline(h=0, lty=2)
abline(v=22, lty=2)
text(22,4.6, "Massachusetts",pos=1)
legend("topright", legend=c("HS", "LA", "DM", "FH", 'BEN', 'GLlasso'), pch=c(16,17,6,8, 8,8), col=c("black", "red", "green","blue", 'orange','pink'))
dev.off()
results
results
BEN_U.est <- colMeans(BEN_results$v)
BEN_U.est
which.max(abs(BEN_U.est))
draw_plots_BEN <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
dev.off()
}
result <- BEN_results
draw_plots_BEN(result)
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s = 1, hyper.t = 1, tune=0.005, init_rho = 0.5, thin = 10)
BEN_theta.est <- BEN_results$theta
BEN_theta.sd <- apply(X %*% t(BEN_results$beta) + t(BEN_results$v), 1, sd)
BEN_B.est <- NA
BEN_U.est <- colMeans(BEN_results$v)
BEN_U.est
# figure 6
pdf("analysis/plots/U_est.pdf",width=5, height=5)
plot(HS_U.est, pch=16, col="black", ylim=c(-2,6), xlab="States", ylab="")
points(LA_U.est, pch=17, col="red")
points(DM_U.est, pch=6, col="green")
points(FH_U.est, pch=8, col="blue")
points(BEN_U.est, pch=8, col="orange")
points(GLlasso_U.est, pch=8, col="pink")
abline(h=0, lty=2)
abline(v=22, lty=2)
text(22,4.6, "Massachusetts",pos=1)
legend("topright", legend=c("HS", "LA", "DM", "FH", 'BEN', 'GLlasso'), pch=c(16,17,6,8, 8,8), col=c("black", "red", "green","blue", 'orange','pink'))
dev.off()
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s = 0.1 , hyper.t = 0.1, tune=0.005, init_rho = 0.5, thin = 10)
BEN_theta.est <- BEN_results$theta
BEN_theta.sd <- apply(X %*% t(BEN_results$beta) + t(BEN_results$v), 1, sd)
BEN_B.est <- NA
BEN_U.est <- colMeans(BEN_results$v)
BEN_U.est
# figure 6
pdf("analysis/plots/U_est.pdf",width=5, height=5)
plot(HS_U.est, pch=16, col="black", ylim=c(-2,6), xlab="States", ylab="")
points(LA_U.est, pch=17, col="red")
points(DM_U.est, pch=6, col="green")
points(FH_U.est, pch=8, col="blue")
points(BEN_U.est, pch=8, col="orange")
points(GLlasso_U.est, pch=8, col="pink")
abline(h=0, lty=2)
abline(v=22, lty=2)
text(22,4.6, "Massachusetts",pos=1)
legend("topright", legend=c("HS", "LA", "DM", "FH", 'BEN', 'GLlasso'), pch=c(16,17,6,8, 8,8), col=c("black", "red", "green","blue", 'orange','pink'))
dev.off()
BEN_results <- func.ben(n_iter = n_iter, burn_in = nburn, data = data, mc_iter = 30,
hyper.s = 0.1, hyper.t = 0.1, tune=0.005, init_rho = 0.5, thin = 10, rho.select = 0.5)
BEN_theta.est <- BEN_results$theta
BEN_theta.sd <- apply(X %*% t(BEN_results$beta) + t(BEN_results$v), 1, sd)
BEN_B.est <- NA
BEN_U.est <- colMeans(BEN_results$v)
BEN_U.est
# figure 5
pdf("analysis/plots/shrinkage_factor.pdf",width=5, height=5)
plot(abs(WLS_stdres), HS_B.est, pch=16, col=1, ylim=c(0,1), xlab="|Standardized Residuals|", ylab="Shrinkage Factors")
points(abs(WLS_stdres), LA_B.est, pch=17, col=2)
points(abs(WLS_stdres), FH_B.est, pch=8, col=4)
points(abs(WLS_stdres), DM_B.est, pch=6, col=3)
legend("bottomleft", legend=c("HS", "LA", "DM", "FH"), pch=c(16, 17, 6, 8), col=c(1,2,3,4))
dev.off()
# figure 6
pdf("analysis/plots/U_est.pdf",width=5, height=5)
plot(HS_U.est, pch=16, col="black", ylim=c(-2,6), xlab="States", ylab="")
points(LA_U.est, pch=17, col="red")
points(DM_U.est, pch=6, col="green")
points(FH_U.est, pch=8, col="blue")
points(BEN_U.est, pch=8, col="orange")
points(GLlasso_U.est, pch=8, col="pink")
abline(h=0, lty=2)
abline(v=22, lty=2)
text(22,4.6, "Massachusetts",pos=1)
legend("topright", legend=c("HS", "LA", "DM", "FH", 'BEN', 'GLlasso'), pch=c(16,17,6,8, 8,8), col=c("black", "red", "green","blue", 'orange','pink'))
dev.off()
GLlasso_results
str(GLlasso_results)
Identity(3)
3I
source('samplers/lasso_sampler.R')
GLlasso_results <- func.GLlasso(n_iter = n_iter, burn_in = nburn, data = data, hyper.s = 6, hyper.t = 6,ga = 0.01, gb = 0.01, gr = 0.01, hr = 0.01, thin = 10)
GLlasso_theta.est <- GLlasso_results$theta
GLlasso_theta.sd <- apply(X %*% t(GLlasso_results$beta) + t(GLlasso_results$v), 1, sd)
GLlasso_B.est <- NA
GLlasso_U.est <- colMeans(GLlasso_results$v)
draw_plots_GLlasso <- function(result){
pdf("traceplots.pdf", width=5, height=5)   # 변수마다 PNG 생성
for (i in 1:dim(result$beta)[2]){
plot(result$beta[,i], type="l", ylab = paste0("beta", i))
}
for (i in 1:dim(result$v)[2]){
plot(result$v[,i], type="l", ylab = paste0("v", i))
}
# for (i in 1:dim(result$lambda)[2]){
#   plot(result$lambda[,i], type="l", ylab = paste0("lambda", i))
# }
plot(result$sigma, type="l", ylab = 'sigma')
# only for GLlasso
plot(result$a, type="l", ylab = 'a')
plot(result$b, type="l", ylab = 'b')
plot(result$r, type="l", ylab = 'r')
dev.off()
}
result <- GLlasso_results
draw_plots_GLlasso(result)
mydata <- read.table(file="analysis/data1.txt", header=TRUE)
m <- nrow(mydata)
X <- cbind(rep(1, m), mydata$X1, mydata$X2, mydata$X3)
Y <- mydata$Y
D <- mydata$d
n_iter <- nburn+nsim
data <- list(Y = Y, X = X, m = nrow(X), p = ncol(X), theta = NA , beta = NA , u = NA , D = D)
# for parallel computing
library(parallel)
# for parallel computing
library(parallel)
source('samplers/lasso_sampler.R')
mydata <- read.table(file="analysis/data1.txt", header=TRUE)
m <- nrow(mydata)
X <- cbind(rep(1, m), mydata$X1, mydata$X2, mydata$X3)
Y <- mydata$Y
D <- mydata$d
n_iter <- nburn+nsim
data <- list(Y = Y, X = X, m = nrow(X), p = ncol(X), theta = NA , beta = NA , u = NA , D = D)
GLlasso_results <- func.GLlasso(n_iter = n_iter, burn_in = nburn, data = data, hyper.s = 6, hyper.t = 6,ga = 0.01, gb = 0.01, gr = 0.01, hr = 0.01, thin = 10)
task_list <- list(
list(fun = function() func.GLlasso(n_iter = n_iter, burn_in = nburn, data = data,
hyper.s = 6, hyper.t = 6,ga = 0.01, gb = 0.01, gr = 0.01, hr = 0.01, thin = 10))
)
task_list <- unlist(lapply(task_list, function(x) rep(list(x),4)), recursive = FALSE)
cl <- makeCluster(20)
clusterExport(cl, varlist = c('data','func.GLlasso', 'nburn','n_iter'))
results <- parLapply(cl, task_list, function(task) {
tryCatch({
task$fun()
}, error = function(e) {
message("Error in task: ", conditionMessage(e))
return(NA)  # 또는 NULL
})
})
results
stopCluster(cl)
results
GLlasso_results <- func.GLlasso(n_iter = n_iter, burn_in = nburn, data = data, hyper.s = 6, hyper.t = 6,ga = 0.01, gb = 0.01, gr = 0.01, hr = 0.01, thin = 10)
